# tts_audio/speech_t5_inference.py

from transformers import pipeline
import torch
import soundfile as sf

# Example speaker embedding (you can load or define your own externally)
DEFAULT_SPEAKER_EMBEDDING = [[-7.5731e-02, -2.7370e-02,  1.4933e-02,  4.5861e-02,  8.3840e-03,
         -2.7535e-02, -5.1030e-02, -6.1435e-02,  1.4576e-02,  1.9632e-02,
         -7.7323e-02, -7.8355e-02,  5.8233e-02,  3.7577e-02,  1.4377e-02,
          1.7147e-02, -1.3966e-02,  1.3549e-03,  9.4501e-03,  9.6230e-03,
          3.8752e-02,  2.5284e-03, -1.5207e-02, -4.5730e-02, -7.0040e-02,
         -8.4035e-03, -5.4758e-02,  4.7528e-03,  5.4306e-02,  1.8867e-02,
         -2.7039e-03,  2.1273e-02,  3.8547e-02, -4.7406e-02,  1.2328e-02,
         -6.9829e-02,  2.7079e-02,  5.5035e-02, -6.0107e-02, -6.4483e-02,
          6.6905e-03, -5.0482e-02,  4.0781e-02,  3.7543e-03,  3.2528e-02,
         -1.2350e-01, -1.8370e-02,  1.1340e-02, -5.8363e-02,  4.8635e-02,
          1.9366e-02,  3.4130e-02,  2.4126e-02,  1.6346e-02, -8.6061e-02,
          2.4379e-03,  1.1567e-02,  3.0723e-02,  3.2634e-02,  1.7792e-02,
          3.7105e-02, -1.0155e-02, -1.4131e-02,  4.0054e-02,  2.5886e-03,
          2.7985e-02,  1.8849e-02, -3.4497e-02, -6.4935e-02, -6.7838e-02,
          1.6550e-02,  1.0723e-02, -5.7267e-02,  1.6395e-02,  2.6811e-02,
          1.1489e-02,  2.2631e-04,  3.3649e-02, -4.3076e-02, -1.0138e-01,
         -3.2313e-02, -3.9939e-02, -4.8604e-02, -7.3076e-02, -3.2598e-02,
         -5.5016e-02, -8.0497e-02,  2.1404e-02,  1.2595e-02,  8.1013e-02,
          2.8438e-02, -9.1571e-02,  2.6646e-02, -5.6353e-02,  3.2727e-02,
         -6.1148e-03,  2.7991e-02,  2.6409e-02, -5.6170e-02, -7.6057e-02,
          3.3457e-02, -2.2366e-02, -6.4855e-02,  2.4247e-02,  2.9651e-02,
         -6.8479e-02,  2.7550e-02,  3.8546e-02,  2.3242e-02,  1.2493e-02,
         -7.7477e-02,  5.7438e-02,  6.9855e-02,  7.3926e-03,  3.0671e-02,
          6.4227e-02, -6.5348e-02, -2.0353e-02, -7.7277e-02, -2.4609e-02,
          8.1601e-03, -7.8592e-02,  2.7010e-02,  9.2486e-03, -6.1651e-02,
          3.7681e-02, -1.0725e-01,  1.1313e-02,  3.1405e-02,  2.7854e-02,
         -4.8992e-03,  2.5332e-02,  9.7699e-03,  5.1193e-02,  1.5345e-02,
         -9.4362e-02, -5.6592e-02, -8.8629e-03, -7.1800e-02, -6.0420e-02,
          4.4344e-02,  5.5215e-03, -3.5413e-02,  3.9511e-02, -6.7250e-02,
          4.5436e-02,  1.6532e-02, -3.8523e-02,  4.5966e-02, -7.9121e-02,
          5.2795e-02, -3.1010e-02, -6.3569e-02,  4.1343e-02,  3.5959e-02,
          1.1169e-02,  1.6097e-02, -6.2336e-02, -7.2390e-02,  3.0439e-02,
          3.6406e-02, -1.8986e-02,  2.1501e-02, -7.7191e-02,  1.6157e-02,
          1.1470e-02,  4.5957e-02,  3.3363e-02,  2.3475e-02,  3.0637e-02,
          3.1186e-02, -6.5670e-02,  4.1199e-02, -3.9888e-02, -2.1472e-02,
          3.0891e-03, -4.2949e-02,  3.0467e-02,  1.6949e-02, -5.1466e-02,
          2.5883e-02, -5.3718e-02,  3.5316e-03,  4.0631e-02, -5.4173e-02,
         -8.6686e-03,  3.5498e-02,  3.0202e-02, -4.0061e-02, -6.6584e-02,
          1.5401e-02,  2.1390e-02, -5.5715e-02,  4.6001e-02,  1.8156e-02,
          3.0570e-02,  1.1719e-02, -9.9191e-03,  5.2008e-02, -1.6743e-02,
          3.6873e-02,  1.7945e-02, -5.2712e-02,  5.1492e-03,  3.1717e-02,
          1.6345e-02,  2.8038e-02, -9.1193e-03,  4.7984e-02, -8.1365e-02,
          2.2815e-03, -3.7835e-02, -5.1607e-02,  5.4826e-02, -5.5837e-02,
          2.9429e-02,  4.3061e-02, -7.3889e-02,  2.4673e-02,  4.0498e-02,
         -6.3633e-02,  2.6250e-02, -7.6712e-02, -3.9236e-02,  4.1200e-02,
          5.9500e-02,  3.3125e-02,  8.4764e-02,  2.6894e-02,  2.1208e-02,
         -1.9036e-02,  3.6105e-02,  1.1080e-02, -3.6135e-02,  1.6011e-02,
         -1.8170e-02,  2.1346e-02,  1.3552e-02, -1.8920e-03,  8.3177e-02,
         -4.1955e-02,  2.7798e-02, -8.2717e-02,  3.2804e-02, -7.2306e-02,
          4.3091e-02,  2.3945e-02,  2.4701e-02,  1.3977e-02,  5.6885e-02,
          1.7945e-02,  2.8972e-02,  8.6228e-03, -5.6302e-02, -1.4323e-02,
          2.9686e-02,  5.8318e-03,  3.8803e-02, -4.1574e-02,  4.0746e-02,
          3.1213e-02, -8.4970e-02, -2.3686e-03,  3.6791e-02,  1.2361e-03,
          4.5098e-02,  5.6538e-03,  2.8413e-02,  1.0165e-02, -5.3070e-02,
          2.1911e-02, -1.1162e-02,  3.8611e-02, -3.0208e-02, -5.9430e-02,
          3.6008e-02,  1.1929e-02,  3.1447e-02, -1.0400e-01, -6.1293e-02,
         -8.0308e-03,  4.2027e-02,  3.0025e-02, -7.4196e-02, -5.2481e-02,
          5.1548e-02,  1.8361e-02,  6.1537e-02, -8.1845e-02,  4.4316e-03,
          6.7739e-03, -9.4557e-03, -5.6989e-02,  2.4892e-02, -3.0561e-02,
          2.5083e-02,  1.9040e-02,  4.1483e-02,  5.1471e-02,  3.7162e-02,
          5.9241e-02,  1.8279e-02,  1.9296e-02, -6.7110e-02,  2.0166e-03,
          4.8967e-02,  5.0391e-02,  1.3446e-02,  1.8206e-02, -8.5504e-03,
          1.1178e-02,  2.0903e-02, -4.1387e-02,  5.5261e-02, -9.4853e-02,
         -4.2134e-02, -2.7247e-02,  2.9106e-02, -6.6454e-02,  6.7363e-02,
         -3.8123e-02,  2.7640e-02, -3.7964e-02,  1.0054e-02,  5.8676e-02,
         -7.0155e-02,  4.6831e-02,  7.9704e-02, -1.0691e-01, -8.5176e-02,
         -5.0247e-02,  4.3429e-02,  7.7549e-05,  3.5321e-02, -8.3261e-02,
          3.6600e-02,  3.6176e-02, -4.2300e-02, -1.0296e-02, -5.7964e-02,
          3.0171e-02, -6.0402e-02,  2.4129e-02, -9.7594e-03, -7.0489e-02,
         -5.9752e-03,  1.0908e-02,  3.8074e-02, -2.1607e-02, -6.5632e-02,
         -5.6591e-02, -3.7202e-02, -3.5643e-02,  1.1503e-01,  4.8548e-02,
         -4.4165e-02, -8.4903e-03,  5.2511e-02, -6.6306e-02, -3.7650e-03,
         -9.6806e-02,  6.3695e-03, -4.7472e-03,  8.2472e-03,  3.9955e-02,
         -1.8661e-02, -5.2143e-02,  1.0988e-02,  1.8065e-02,  4.5972e-02,
          1.2286e-02,  7.0595e-02, -8.4777e-02, -1.4104e-02, -1.3229e-02,
         -2.5280e-03,  3.9428e-02,  8.6427e-03,  5.7508e-02,  2.3728e-02,
         -6.6087e-02, -1.1664e-01,  2.2290e-02,  5.0236e-02,  2.4568e-02,
         -6.6172e-02,  2.6201e-02, -5.5484e-02,  4.6974e-02,  3.0781e-02,
          2.4634e-02,  3.1654e-04, -4.1335e-02,  2.2777e-02,  4.0515e-02,
         -1.4501e-03,  3.3753e-02, -6.3499e-02, -2.4656e-02, -1.9639e-02,
         -1.4018e-02, -6.5658e-02,  4.1642e-03, -3.2586e-02,  1.7866e-02,
          7.4335e-03,  6.4375e-04, -5.8995e-02, -6.5919e-02, -8.0942e-02,
         -3.7122e-02,  2.8975e-02,  6.9335e-04, -1.5037e-02,  1.6579e-02,
         -6.5062e-02,  1.9240e-02, -8.5884e-02, -1.2970e-01, -2.1583e-02,
         -4.2093e-02,  9.9256e-03,  2.9919e-02, -5.6503e-02, -5.9666e-02,
          3.0643e-02,  6.5749e-02,  5.1784e-02,  3.0791e-02, -3.2522e-02,
         -4.9952e-02, -1.8215e-02, -2.5078e-02,  3.5772e-02,  4.6380e-02,
          4.1542e-03,  3.4328e-02, -7.7166e-03, -8.1652e-02, -6.3338e-02,
          1.9106e-02, -2.6073e-04,  3.7431e-02,  5.0535e-03,  2.1157e-02,
          2.8372e-02,  3.9707e-02,  1.0605e-02,  3.4675e-03, -1.4806e-02,
          3.8775e-02,  2.4118e-02,  6.7608e-02,  4.9226e-02,  1.0720e-02,
          1.3325e-02,  2.7272e-02, -6.4426e-02, -5.2507e-02,  3.4602e-02,
         -1.4481e-02,  2.2297e-02,  3.4668e-02,  3.1350e-02, -5.9222e-02,
          5.2553e-02,  4.2786e-02, -5.9978e-02,  2.3348e-02,  2.5155e-02,
         -2.1993e-03,  3.6892e-02,  2.5243e-02,  4.0611e-03, -5.3466e-03,
         -7.2841e-02,  1.3622e-04, -5.5694e-03,  3.9565e-02,  2.9341e-02,
         -6.4077e-02, -5.2649e-02, -1.3348e-02,  2.1251e-02,  2.4448e-02,
          3.3583e-02, -6.7184e-02,  2.9360e-02, -5.0579e-03, -1.2123e-02,
         -4.8513e-02,  2.4554e-02, -5.2060e-02,  2.0694e-02, -3.5575e-02,
          1.4269e-02, -4.6220e-02,  3.6354e-02, -8.2248e-02, -6.0916e-02,
          1.0230e-02,  3.5427e-02, -6.8191e-02,  2.3711e-02, -3.5071e-02,
         -1.2789e-02, -8.0640e-02,  3.7140e-02,  8.2634e-02,  2.2695e-02,
          4.4507e-02, -5.3924e-02]]

def load_model():
    """
    Loads the SpeechT5 text-to-speech model pipeline.
    
    Returns:
    - A HuggingFace pipeline object for text-to-speech synthesis.
    """
    return pipeline("text-to-speech", model="microsoft/speecht5_tts")

def synthesize_audio(pipeline_model, text, output_path="speech.wav", speaker_embedding=None):
    """
    Synthesizes speech from text using SpeechT5 and saves it to a file.

    Parameters:
    - pipeline_model: The loaded SpeechT5 pipeline.
    - text: The input text to synthesize.
    - output_path: Path to save the synthesized audio.
    - speaker_embedding: Optional speaker embedding (default used if None).

    Returns:
    - Path to the generated audio file.
    """
    if speaker_embedding is None:
        speaker_embedding = DEFAULT_SPEAKER_EMBEDDING

    speech = pipeline_model(
        text,
        forward_params={"speaker_embeddings": torch.tensor(speaker_embedding)}
    )
    sf.write(output_path, speech["audio"], samplerate=speech["sampling_rate"])
    print("################ i've written the audio file")
    return output_path